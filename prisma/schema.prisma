// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id
  firstname String?   @db.VarChar(250)
  lastname  String?   @db.VarChar(250)
  email     String    @unique @db.VarChar(250)
  password  String?
  birthdate DateTime?
  bio       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Role      @default(USER)
  avatar    Avatar[]
  posts     Post[]

  providerId   String? @unique
  providerName String?

  @@map("users")
}

model Avatar {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  filename  String   @db.VarChar(150)
  path      String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String

  @@map("avatars")
}

model Post {
  id          Int                 @id
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  published   Boolean             @default(false)
  title       String
  content     String
  cover_photo String?
  authorId    String
  category    CategoriesOnPosts[]
  author      User                @relation(fields: [authorId], references: [id])
  reaction    ReactionsOnPosts[]
  tag         TagsOnPosts[]

  @@map("posts")
}

model Category {
  id   Int                 @id @default(autoincrement())
  name String
  post CategoriesOnPosts[]

  @@map("categories")
}

model Tag {
  id          Int           @id @default(autoincrement())
  designation String
  post        TagsOnPosts[]
}

model Reaction {
  id   Int                @id
  type ReactionEnum
  post ReactionsOnPosts[]
}

model ReactionsOnPosts {
  postId     Int
  reactionId Int
  post       Post     @relation(fields: [postId], references: [id])
  reaction   Reaction @relation(fields: [reactionId], references: [id])

  @@id([postId, reactionId])
}

model TagsOnPosts {
  postId Int
  tagId  Int
  post   Post @relation(fields: [postId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
}

model CategoriesOnPosts {
  postId     Int
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  post       Post     @relation(fields: [postId], references: [id])

  @@id([postId, categoryId])
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum ReactionEnum {
  like
  love
}
