var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.875,1,2.16]],["body/modules/AppModule.html",[0,1.098,1,4.104,2,0.885,3,0.885,4,1.037,5,1.037,6,0.885,7,1.881,8,1.037,9,1.915,10,1.915,11,1.915,12,3.075,13,0.03,14,3.075,15,3.075,16,3.075,17,2.802,18,3.075,19,3.075,20,1.563,21,1.037,22,1.037,23,0.22,24,0.193,25,0.193,26,2.282,27,2.252,28,0.704,29,2.282,30,3.441,31,4.612,32,0.56,33,2.282,34,0.653,35,0.653,36,0.404,37,0.605,38,3.441,39,0.653,40,1.674,41,0.655,42,3.441,43,2.282,44,0.338,45,2.282,46,2.282,47,2.282,48,2.282,49,1.349,50,2.282,51,3.441,52,1.493,53,2.252,54,2.282,55,1.493,56,2.282,57,2.282,58,1.915,59,2.282,60,1.674,61,2.282,62,1.915,63,2.282,64,2.282,65,2.282,66,0.957,67,2.282,68,0.22,69,0.052,70,1.126,71,2.282,72,2.282,73,1.349,74,1.915,75,2.282,76,0.015,77,0.015]],["title/controllers/AuthController.html",[78,1.951,79,2.16]],["body/controllers/AuthController.html",[13,0.029,23,0.31,24,0.273,25,0.273,28,1.36,32,1.082,34,1.261,35,1.261,36,0.781,37,1.168,39,1.261,41,0.587,44,0.476,68,0.31,69,0.073,76,0.019,77,0.019,78,1.902,79,2.883,80,1.902,81,2.7,82,2.7,83,2.7,84,0.57,85,3.698,86,3.698,87,2.7,88,2.809,89,2.605,90,3.217,91,3.217,92,3.698,93,3.217,94,3.217,95,3.217,96,2.359,97,3.217,98,2.707,99,2.7,100,2.7,101,3.686,102,3.217,103,3.217,104,1.902,105,3.217,106,3.217,107,1.582,108,3.217,109,3.217,110,3.217,111,3.217]],["title/guards/AuthGuard.html",[53,2.16,112,2.421]],["body/guards/AuthGuard.html",[13,0.03,23,0.21,24,0.184,25,0.184,28,1.024,32,0.987,34,1.151,35,1.151,36,0.858,37,1.066,39,0.949,41,0.526,44,0.321,49,1.285,52,1.422,53,2.17,66,1.39,68,0.21,69,0.049,70,1.073,76,0.015,77,0.015,84,0.385,107,1.444,113,1.594,114,1.824,115,1.985,116,3.776,117,2.52,118,3.317,119,1.506,120,2.174,121,4.285,122,2.631,123,2.944,124,4.457,125,2.174,126,2.783,127,2.944,128,2.174,129,1.285,130,2.783,131,3.317,132,3.17,133,2.174,134,1.39,135,4.021,136,0.49,137,4.499,138,1.422,139,1.594,140,2.174,141,2.621,142,2.783,143,2.174,144,1.824,145,1.824,146,1.824,147,4.499,148,2.174,149,3.375,150,2.166,151,1.824,152,3.375,153,2.174,154,2.783,155,1.285,156,2.174,157,3.317,158,2.174,159,2.174,160,2.174,161,2.174,162,2.174,163,1.824,164,2.174,165,2.174,166,2.174,167,1.824,168,1.824,169,2.174,170,2.174]],["title/modules/AuthModule.html",[0,0.875,12,1.951]],["body/modules/AuthModule.html",[0,1.395,2,1.364,3,1.364,4,1.598,5,1.598,6,1.364,7,2.39,8,1.598,12,3.55,13,0.029,20,2.126,21,1.598,22,1.598,23,0.339,24,0.298,25,0.298,27,2.303,41,0.609,44,0.52,66,1.475,68,0.339,69,0.08,76,0.021,77,0.021,79,3.442,80,2.768,98,3.234,99,2.953,138,2.303,152,2.953,171,2.953,172,2.953,173,3.519,174,3.519,175,3.519,176,3.519,177,2.581,178,3.519,179,3.519,180,3.519,181,3.519]],["title/injectables/AuthService.html",[98,1.778,136,0.488]],["body/injectables/AuthService.html",[13,0.03,23,0.178,24,0.156,25,0.156,28,0.9,32,1.011,34,1.178,35,1.178,36,0.729,37,1.092,39,1.036,41,0.579,44,0.273,68,0.178,69,0.042,76,0.013,77,0.013,84,0.327,85,2.449,86,2.449,87,2.449,88,1.87,92,1.547,98,1.571,100,1.547,107,1.611,115,2.355,117,1.787,119,1.325,121,4.194,130,2.449,134,2,136,0.431,138,1.206,141,2.355,149,1.547,150,1.95,151,2.449,154,1.547,155,2.82,167,2.449,168,3.039,182,0.715,183,1.547,184,2.918,185,1.843,186,2.032,187,2.467,188,1.843,189,2.918,190,2.918,191,4.486,192,1.843,193,3.019,194,2.694,195,1.843,196,1.725,197,2.918,198,1.843,199,2.918,200,1.843,201,1.843,202,1.547,203,2.449,204,1.843,205,2.918,206,1.547,207,2.918,208,1.843,209,1.547,210,1.843,211,1.843,212,2.82,213,2.918,214,1.843,215,1.843,216,2.918,217,1.843,218,1.206,219,1.206,220,1.843,221,1.843,222,1.352,223,1.843,224,1.843,225,1.843,226,1.843,227,1.843,228,1.843,229,2.918,230,1.843,231,1.843,232,1.843,233,1.843,234,2.918,235,1.843,236,1.843,237,1.843,238,1.843,239,1.843,240,1.843,241,1.843,242,1.843,243,1.843,244,1.843,245,1.843,246,1.843,247,1.843,248,1.843,249,1.843]],["title/classes/CreateUserDto.html",[69,0.075,88,1.499]],["body/classes/CreateUserDto.html",[13,0.029,23,0.327,24,0.287,25,0.287,32,1.356,36,0.979,41,0.368,68,0.327,69,0.103,76,0.02,77,0.02,84,0.6,88,2.073,89,3.265,134,2.587,193,3.786,212,3.052,250,1.825,251,4.839,252,2.217,253,2.253,254,4.333,255,4.333,256,2.844,257,3.389,258,4.565,259,3.389,260,3.389,261,2.844,262,3.389,263,3.831,264,4.333,265,5.162,266,4.636,267,2.485]],["title/classes/CreateUserDto-1.html",[69,0.063,88,1.257,268,2.322]],["body/classes/CreateUserDto-1.html",[13,0.027,23,0.467,24,0.41,25,0.41,68,0.467,69,0.11,76,0.025,77,0.025,88,2.599,250,2.608,252,3.168,269,4.063]],["title/injectables/LoggerMiddleware.html",[55,2.16,136,0.488]],["body/injectables/LoggerMiddleware.html",[13,0.029,23,0.345,24,0.303,25,0.303,28,1.461,32,0.879,34,1.024,35,1.024,36,0.634,37,0.949,39,1.024,40,2.626,41,0.514,44,0.529,55,3.099,68,0.345,69,0.081,70,1.767,74,3.005,76,0.021,77,0.021,84,0.634,132,3.842,136,0.7,182,1.388,270,3.005,271,4.736,272,4.736,273,5.306,274,3.338,275,4.141,276,5.647,277,3.58,278,3.58,279,4.736,280,2.343,281,3.58,282,3.58,283,3.58,284,3.58,285,3.58]],["title/classes/LoginDto.html",[69,0.075,194,2.16]],["body/classes/LoginDto.html",[13,0.029,23,0.38,24,0.334,25,0.334,32,1.237,36,0.893,41,0.427,68,0.38,69,0.114,76,0.022,77,0.022,84,0.698,89,2.979,134,2.455,193,4.075,194,3.297,212,3.285,250,2.122,253,2.487,256,3.306,261,3.306,263,4.229,264,4.663,266,4.229,267,2.889,286,3.306,287,3.939,288,3.939]],["title/modules/MailModule.html",[0,0.875,14,1.951]],["body/modules/MailModule.html",[0,1.242,2,1.094,3,1.094,4,1.281,5,1.281,6,1.094,7,2.127,8,2.127,13,0.03,14,3.412,20,1.826,21,1.281,22,1.281,23,0.272,24,0.239,25,0.239,27,1.846,41,0.626,44,0.417,49,1.668,66,1.685,68,0.272,69,0.064,73,1.668,76,0.018,77,0.018,83,2.367,115,1.392,122,1.846,123,3.064,150,1.519,177,2.948,187,3.072,289,2.367,290,2.367,291,2.367,292,2.821,293,2.821,294,2.948,295,2.069,296,2.367,297,4.02,298,2.821,299,2.821,300,3.374,301,2.821,302,2.367,303,2.821,304,2.821,305,2.821,306,2.821,307,1.392,308,2.821,309,2.821,310,2.821,311,2.821,312,2.821,313,2.821,314,2.367,315,2.821,316,2.821,317,2.821,318,2.821,319,2.367,320,2.821,321,2.367]],["title/injectables/MailService.html",[136,0.488,187,1.629]],["body/injectables/MailService.html",[13,0.029,23,0.325,24,0.286,25,0.286,28,1.405,32,1.118,34,1.303,35,1.474,36,0.807,37,1.207,39,0.966,41,0.494,44,0.499,68,0.325,69,0.076,76,0.02,77,0.02,84,0.598,104,1.995,115,2.543,119,1.533,129,1.995,136,0.673,141,1.666,155,1.995,182,1.309,187,2.247,212,1.995,294,2.475,295,2.475,307,1.666,314,2.833,322,2.833,323,4.552,324,3.375,325,5.932,326,3.375,327,4.552,328,3.375,329,3.821,330,3.375,331,3.375,332,3.375,333,5.152,334,3.375,335,3.375,336,3.375,337,3.375,338,2.833,339,3.375]],["title/modules/PostModule.html",[0,0.875,15,1.951]],["body/modules/PostModule.html",[0,1.483,2,1.55,3,1.55,4,1.815,5,1.815,6,1.55,7,2.541,8,1.815,13,0.028,15,3.674,20,2.31,21,1.815,22,1.815,23,0.385,24,0.339,25,0.339,41,0.552,44,0.591,68,0.385,69,0.091,76,0.022,77,0.022,340,3.354,341,3.354,342,3.674,343,3.997,344,3.997]],["title/injectables/PostService.html",[136,0.488,342,1.951]],["body/injectables/PostService.html",[13,0.028,23,0.453,24,0.399,25,0.399,41,0.51,44,0.696,68,0.453,69,0.107,76,0.025,77,0.025,136,0.832,182,1.824,342,3.325,345,3.947]],["title/modules/PrismaModule.html",[0,0.875,16,1.951]],["body/modules/PrismaModule.html",[0,1.441,2,1.458,3,1.458,4,1.708,5,1.708,6,1.458,7,2.468,8,2.468,13,0.028,16,3.681,20,2.221,21,1.708,22,1.708,23,0.362,24,0.319,25,0.319,41,0.531,44,0.556,68,0.362,69,0.085,76,0.022,77,0.022,177,3.586,186,3.22,346,3.155,347,3.155,348,3.155,349,3.76,350,3.76]],["title/injectables/PrismaService.html",[136,0.488,186,1.629]],["body/injectables/PrismaService.html",[13,0.029,23,0.335,24,0.294,25,0.294,28,1.433,32,1.14,34,0.994,35,0.994,36,0.616,37,0.921,39,0.994,41,0.567,44,0.514,49,2.054,68,0.335,69,0.079,70,1.715,76,0.02,77,0.02,84,0.616,115,2.58,119,1.578,122,2.273,123,3.651,136,0.687,155,2.054,182,1.347,186,2.291,329,2.916,351,2.916,352,3.896,353,5.228,354,5.982,355,4.642,356,3.475,357,3.475,358,3.475,359,3.475,360,3.475,361,3.475,362,3.475,363,3.475]],["title/interfaces/Response.html",[274,1.951,364,1.951]],["body/interfaces/Response.html",[13,0.029,23,0.259,24,0.227,25,0.227,36,0.475,41,0.421,44,0.397,66,1.125,68,0.259,69,0.061,70,1.324,73,2.293,76,0.017,77,0.017,84,0.475,107,0.963,117,1.914,127,3.264,129,3.129,132,2.537,136,0.574,141,2.874,196,1.586,218,3.463,222,1.968,253,1.914,274,2.949,275,1.968,364,1.586,365,2.683,366,1.968,367,3.822,368,3.255,369,4.187,370,2.252,371,3.255,372,2.252,373,2.252,374,3.255,375,3.255,376,1.968,377,1.756,378,2.252,379,2.252,380,2.252,381,2.252,382,2.252,383,2.252,384,2.252,385,2.252,386,2.252,387,3.255,388,3.255,389,3.255,390,3.255,391,3.822,392,2.252,393,2.252,394,4.187,395,3.255,396,3.255,397,2.252,398,3.255,399,2.252,400,2.252,401,2.252,402,2.252,403,2.252,404,2.252]],["title/injectables/ResponseInterceptor.html",[136,0.488,377,2.16]],["body/injectables/ResponseInterceptor.html",[13,0.029,23,0.219,24,0.193,25,0.193,28,1.06,32,1.015,34,1.183,35,1.183,36,0.733,37,1.097,39,1.183,40,2.518,41,0.373,44,0.337,66,0.954,68,0.219,69,0.052,70,1.123,73,2.03,76,0.015,77,0.015,84,0.403,107,0.817,117,2.565,127,3.79,129,3.424,132,2.247,136,0.508,141,2.741,182,0.882,196,1.345,218,2.706,222,1.669,274,2.445,275,3.033,364,1.345,366,1.669,367,1.91,368,3.865,369,4.362,370,1.91,371,2.882,372,1.91,373,1.91,374,3.471,375,2.882,376,1.669,377,2.247,378,3.471,379,1.91,380,1.91,381,1.91,382,1.91,383,1.91,384,1.91,385,1.91,386,2.882,387,2.882,388,2.882,389,2.882,390,2.882,391,3.471,392,1.91,393,1.91,394,3.865,395,2.882,396,2.882,397,2.882,398,3.471,399,1.91,400,1.91,401,1.91,402,1.91,403,1.91,404,1.91,405,3.434,406,3.434,407,2.276,408,2.276,409,2.276,410,2.276]],["title/guards/RolesGuard.html",[112,2.421,411,2.421]],["body/guards/RolesGuard.html",[13,0.029,23,0.308,24,0.271,25,0.271,28,1.353,32,1.076,34,1.254,35,1.254,36,0.777,37,1.162,39,0.913,41,0.585,44,0.472,52,2.089,66,1.338,68,0.308,69,0.072,70,1.576,76,0.019,77,0.019,84,0.566,104,1.887,107,1.574,113,2.341,116,4.522,119,1.45,124,4.897,126,3.679,127,3.526,129,1.887,136,0.648,141,2.163,144,2.679,145,2.679,146,2.679,307,1.576,411,3.215,412,2.679,413,3.192,414,3.192,415,3.192,416,4.383,417,1.887,418,3.192,419,2.341,420,3.192,421,4.383,422,3.192,423,3.192,424,3.192]],["title/modules/StorageModule.html",[0,0.875,17,1.778]],["body/modules/StorageModule.html",[0,1.428,2,1.432,3,1.432,4,1.677,5,1.677,6,1.432,7,2.447,8,2.447,13,0.029,17,3.339,20,2.195,21,1.677,22,1.677,23,0.356,24,0.313,25,0.313,41,0.585,44,0.546,68,0.356,69,0.084,76,0.021,77,0.021,425,3.099,426,3.099,427,3.099,428,3.505,429,3.692,430,3.692,431,3.544,432,3.692]],["title/injectables/StorageService.html",[136,0.488,428,1.778]],["body/injectables/StorageService.html",[13,0.029,23,0.314,24,0.276,25,0.276,28,1.371,32,1.09,34,1.271,35,1.271,36,0.787,37,1.178,39,0.931,41,0.549,44,0.481,68,0.314,69,0.074,76,0.02,77,0.02,84,0.577,96,2.387,107,1.169,115,2.496,117,1.607,119,1.478,134,2.46,136,0.657,150,1.753,182,1.262,196,1.924,428,2.393,433,2.732,434,4.442,435,3.255,436,4.926,437,3.255,438,4.442,439,4.559,440,4.559,441,3.255,442,3.728,443,2.387,444,3.255,445,4.442,446,2.732,447,2.732,448,2.387,449,3.255,450,3.255,451,3.255,452,3.255]],["title/injectables/TaskSchedule.html",[19,1.951,136,0.488]],["body/injectables/TaskSchedule.html",[13,0.029,19,2.655,23,0.319,24,0.28,25,0.28,28,1.386,32,1.252,34,0.946,35,0.946,36,0.586,37,0.877,39,0.946,41,0.553,44,0.489,60,2.426,68,0.319,69,0.075,76,0.02,77,0.02,84,0.586,89,1.955,104,1.955,107,1.188,117,2.516,119,1.502,136,0.664,150,2.419,182,1.282,187,2.911,209,2.776,212,2.655,253,2.216,453,2.776,454,3.739,455,5.897,456,5.469,457,3.307,458,4.491,459,4.491,460,3.307,461,2.776,462,2.426,463,3.307,464,3.307,465,3.307,466,3.307,467,3.307]],["title/classes/UpdateUserDto.html",[69,0.075,468,1.951]],["body/classes/UpdateUserDto.html",[13,0.028,23,0.427,24,0.375,25,0.375,41,0.588,68,0.427,69,0.1,76,0.024,77,0.024,88,2.01,250,2.384,252,2.896,352,4.549,468,3.204,469,3.714,470,5.42,471,4.426,472,3.714,473,3.714,474,3.714,475,3.246]],["title/classes/User.html",[69,0.075,307,1.629]],["body/classes/User.html",[13,0.028,23,0.347,24,0.305,25,0.305,32,1.444,36,1.042,37,1.602,41,0.39,68,0.347,69,0.081,76,0.021,77,0.021,84,0.637,134,2.621,219,3.479,250,1.937,253,2.344,254,4.463,255,4.463,307,2.344,417,3.571,476,3.018,477,4.463,478,3.596,479,3.596,480,3.596,481,3.596,482,3.596,483,3.018]],["title/controllers/UsersController.html",[78,1.951,484,2.16]],["body/controllers/UsersController.html",[13,0.029,23,0.219,24,0.192,25,0.35,28,1.058,32,1.212,34,1.316,35,1.316,36,0.815,37,1.22,39,1.413,41,0.563,44,0.336,68,0.219,69,0.051,76,0.015,77,0.015,78,1.342,80,1.342,82,1.905,84,0.402,89,2.919,96,2.513,104,1.342,107,1.773,134,2.498,219,3.787,280,1.485,417,1.342,454,1.664,468,3.28,475,1.664,483,1.905,484,2.242,485,1.905,486,2.27,487,3.86,488,2.876,489,2.876,490,2.876,491,4.128,492,2.27,493,1.905,494,3.427,495,2.27,496,1.905,497,3.427,498,2.27,499,2.27,500,1.905,501,3.427,502,2.27,503,2.27,504,3.465,505,3.427,506,3.427,507,2.27,508,2.27,509,2.27,510,2.27,511,2.27,512,3.427,513,2.27,514,2.224,515,1.905,516,1.905,517,1.664,518,2.27,519,2.27,520,1.905,521,2.27,522,2.27,523,2.27,524,2.27,525,2.27,526,2.27,527,2.27,528,2.27,529,2.27,530,2.27,531,2.27,532,2.27,533,2.27,534,2.27]],["title/modules/UsersModule.html",[0,0.875,18,1.951]],["body/modules/UsersModule.html",[0,1.404,2,1.382,3,1.382,4,1.619,5,1.619,6,1.382,7,2.405,8,1.619,13,0.029,17,3.246,18,3.69,20,2.145,21,1.619,22,1.619,23,0.344,24,0.302,25,0.302,27,3.09,41,0.612,44,0.527,58,2.992,68,0.344,69,0.081,76,0.021,77,0.021,80,2.791,484,3.465,514,3.246,515,2.992,535,2.992,536,2.992,537,3.565,538,3.565,539,3.565]],["title/injectables/UsersService.html",[136,0.488,514,1.778]],["body/injectables/UsersService.html",[13,0.03,23,0.196,24,0.172,25,0.267,28,0.971,32,1.219,34,1.344,35,1.344,36,0.832,37,1.245,39,1.344,41,0.539,44,0.3,66,1.319,68,0.196,69,0.046,73,1.2,76,0.014,77,0.014,84,0.36,107,1.686,115,1.901,117,1.553,119,1.429,134,2.435,136,0.465,141,1.901,155,1.2,182,0.787,186,2.452,196,1.2,202,1.703,218,2.058,219,3.895,280,2.058,300,2.64,428,2.791,439,2.64,440,2.64,442,3.233,454,1.488,468,3.166,474,1.703,475,1.488,477,3.233,487,3.642,488,2.64,489,2.64,490,2.64,493,2.64,496,2.64,500,2.64,504,3.233,514,1.694,516,1.703,540,1.703,541,3.146,542,2.029,543,2.029,544,2.029,545,2.029,546,2.029,547,3.146,548,2.029,549,2.029,550,2.029,551,2.029,552,3.146,553,2.029,554,3.146,555,2.029,556,2.029,557,2.029,558,2.029,559,2.029,560,2.029,561,2.029]],["title/coverage.html",[562,3.289]],["body/coverage.html",[6,0.942,13,0.029,19,1.437,25,0.206,36,0.431,53,1.59,55,1.59,69,0.115,76,0.016,77,0.016,78,2.132,79,1.59,81,2.04,88,1.638,98,1.309,101,1.782,112,2.645,114,2.04,136,0.856,139,1.782,150,1.309,183,2.04,186,1.199,187,1.199,194,1.59,251,2.04,252,2.814,269,2.04,270,2.04,274,1.437,286,2.04,307,1.199,322,2.04,342,1.437,345,2.04,351,2.04,364,1.437,366,2.645,377,1.59,411,1.782,412,2.04,419,1.782,428,1.309,431,1.782,433,2.04,443,1.782,453,2.04,468,1.437,469,2.04,476,2.04,484,1.59,485,2.04,514,1.309,517,1.782,540,2.04,562,1.782,563,2.43,564,2.43,565,2.43,566,6.552,567,5.326,568,3.607,569,2.04,570,5.326,571,2.04,572,6.046,573,2.04,574,4.301,575,1.782,576,3.027,577,3.027,578,2.04,579,4.301,580,2.04,581,3.607,582,2.04,583,3.607,584,2.43,585,2.43,586,2.43]],["title/dependencies.html",[3,1.537,587,2.322]],["body/dependencies.html",[3,1.458,13,0.03,44,0.556,49,2.223,52,2.46,60,2.757,69,0.111,76,0.022,77,0.022,138,2.46,203,3.155,206,3.155,267,2.757,280,2.46,294,2.757,295,2.757,376,2.757,446,3.155,447,3.155,448,2.757,472,3.155,473,3.155,520,3.155,588,3.76,589,3.76,590,5.435,591,3.76,592,3.76,593,3.76,594,3.76,595,3.76,596,3.76,597,3.76,598,3.76,599,3.76,600,3.76,601,3.76,602,3.76,603,3.76,604,3.76,605,3.76,606,3.76]],["title/miscellaneous/enumerations.html",[607,1.49,608,3.327]],["body/miscellaneous/enumerations.html",[13,0.028,76,0.024,77,0.024,84,0.819,307,2.748,417,3.291,462,4.38,607,2.491,608,3.881,609,4.624,610,4.624,611,5.567,612,5.567]],["title/miscellaneous/functions.html",[607,1.49,613,3.327]],["body/miscellaneous/functions.html",[6,2.261,13,0.027,34,1.253,35,1.253,36,0.776,37,1.161,39,1.253,76,0.024,77,0.024,84,0.776,319,3.675,436,3.675,443,4.277,573,3.675,575,3.949,578,3.675,580,3.675,607,2.358,613,3.675,614,4.379,615,4.379,616,4.379,617,4.379,618,5.385]],["title/index.html",[84,0.49,619,2.767,620,2.767]],["body/index.html",[13,0.029,24,0.274,76,0.019,77,0.019,163,2.711,296,2.711,338,2.711,562,2.369,621,3.23,622,3.23,623,4.418,624,3.23,625,3.23,626,3.23,627,3.23,628,3.23,629,3.23,630,2.711,631,5.036,632,3.23,633,3.23,634,3.23,635,3.23,636,5.036,637,5.994,638,3.23,639,3.23,640,5.855,641,3.23,642,3.23,643,4.418,644,3.23,645,3.23,646,3.23,647,3.23,648,4.418,649,4.418,650,3.23,651,3.23,652,3.23,653,4.418,654,4.418,655,3.23,656,3.23,657,3.23,658,3.23,659,3.23,660,2.711,661,3.23,662,3.23,663,3.23,664,3.23,665,3.23,666,3.23,667,3.23,668,3.23,669,2.711,670,3.23,671,3.23,672,3.23,673,3.23,674,3.23,675,3.23,676,2.711,677,3.23]],["title/modules.html",[2,1.739]],["body/modules.html",[1,2.762,2,1.637,12,2.496,13,0.023,14,2.496,15,2.496,16,2.496,17,2.274,18,2.496,76,0.023,77,0.023,660,5.365,678,6.393,679,6.393,680,6.393]],["title/overview.html",[681,3.764]],["body/overview.html",[0,0.721,1,4.166,2,1.054,3,1.054,4,1.235,5,1.235,6,1.054,7,1.235,8,1.235,9,2.282,10,2.282,11,2.282,12,3.145,13,0.028,14,3.275,15,3.145,16,3.275,17,3.075,18,3.375,19,2.712,20,1.778,21,1.235,22,1.235,76,0.017,77,0.017,80,1.607,98,2.471,113,1.994,171,2.282,172,2.282,182,1.054,186,2.818,187,2.818,250,1.464,268,2.282,289,2.282,290,2.282,291,2.282,340,2.282,341,2.282,342,2.712,346,2.282,347,2.282,348,2.282,364,1.607,425,2.282,426,2.282,427,2.282,428,3.075,514,2.471,535,2.282,536,2.282,681,2.282,682,2.719,683,3.915,684,2.719,685,2.719]],["title/properties.html",[253,1.957,587,2.322]],["body/properties.html",[13,0.029,76,0.025,77,0.025,253,2.39,630,4.063,669,4.063,676,4.063,686,4.841,687,4.841,688,4.841]],["title/miscellaneous/variables.html",[607,1.49,689,3.327]],["body/miscellaneous/variables.html",[13,0.029,36,0.961,62,2.721,66,1.857,76,0.019,77,0.019,84,0.574,101,3.249,107,1.164,122,2.121,123,2.899,134,2.115,139,3.249,142,2.721,302,2.721,321,2.721,417,1.917,419,3.249,431,3.249,448,2.378,461,4.92,462,4.299,517,4.165,569,2.721,571,4.235,575,2.378,576,2.721,577,2.721,582,2.721,607,1.746,689,2.721,690,4.43,691,4.43,692,3.242,693,3.242,694,3.242,695,3.242,696,3.242,697,3.242,698,3.242,699,3.242,700,3.242,701,3.242,702,3.242,703,3.242,704,3.242,705,3.242,706,3.242]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":687,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["0.31.1",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":268,"title":{"classes/CreateUserDto-1.html":{}},"body":{"overview.html":{}}}],["1.9.1",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["2",{"_index":683,"title":{},"body":{"overview.html":{}}}],["2h",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["3.1.1",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["3.451.0",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":685,"title":{},"body":{"overview.html":{}}}],["6.9.7",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":682,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":684,"title":{},"body":{"overview.html":{}}}],["9.0.1",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesskeyid",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adapter",{"_index":318,"title":{},"body":{"modules/MailModule.html":{}}}],["address",{"_index":332,"title":{},"body":{"injectables/MailService.html":{}}}],["admin",{"_index":611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["again",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["already",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":661,"title":{},"body":{"index.html":{}}}],["app",{"_index":338,"title":{},"body":{"injectables/MailService.html":{},"index.html":{}}}],["app_guard",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":629,"title":{},"body":{"index.html":{}}}],["apply(loggermiddleware",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argon2",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2.hash(password",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2.verify(hashedpassword",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":79,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":53,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":12,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":669,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":98,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":477,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["await",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":446,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["backers",{"_index":662,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["blog",{"_index":337,"title":{},"body":{"injectables/MailService.html":{}}}],["body",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/StorageService.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":416,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":680,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":678,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":451,"title":{},"body":{"injectables/StorageService.html":{}}}],["bucketname",{"_index":440,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["buffer",{"_index":439,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["building",{"_index":624,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":368,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["canactivate",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["catch",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["catcherror",{"_index":372,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["catcherror((err",{"_index":384,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["class",{"_index":69,"title":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":289,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":291,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":290,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":340,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_providers",{"_index":341,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":346,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":348,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":347,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_storagemodule",{"_index":425,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_exports",{"_index":426,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_storagemodule_providers",{"_index":427,"title":{},"body":{"modules/StorageModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":535,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":537,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":536,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["comparepassword",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepassword(password",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["config",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"modules/MailModule.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["config.get('aws_s3_access_key",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('aws_s3_region",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('aws_s3_secret_key",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('database_url",{"_index":362,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('mailer_host",{"_index":305,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mailer_password",{"_index":310,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mailer_user",{"_index":308,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('minio_s3_url",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{},"modules/MailModule.html":{},"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmation",{"_index":339,"title":{},"body":{"injectables/MailService.html":{}}}],["console.log",{"_index":281,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log('send",{"_index":465,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["console.log('sending",{"_index":331,"title":{},"body":{"injectables/MailService.html":{}}}],["console.log(createduser",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(e",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(e.message",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(password",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"injectables/UsersService.html":{}}}],["constructor(@injects3",{"_index":449,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(config",{"_index":355,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(jwtservice",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(mailerservice",{"_index":324,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(mailservice",{"_index":457,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["constructor(prisma",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(prismaservice",{"_index":542,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":413,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(s3client",{"_index":435,"title":{},"body":{"injectables/StorageService.html":{}}}],["consumer",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp",{"_index":388,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":78,"title":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":521,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":562,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":474,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["createduser",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["creates3client",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["creates3client(options",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserdto",{"_index":88,"title":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["credentials",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cron",{"_index":463,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["cron(cronexpression.every_10_seconds",{"_index":459,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["cronexpression",{"_index":464,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["ctx",{"_index":387,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["ctx.getrequest",{"_index":390,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["ctx.getresponse",{"_index":389,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["currenttime",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["data",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"injectables/UsersService.html":{}}}],["datasources",{"_index":360,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date.now",{"_index":555,"title":{},"body":{"injectables/UsersService.html":{}}}],["db",{"_index":361,"title":{},"body":{"injectables/PrismaService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/auth.decorator",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["decorator/role.decorator",{"_index":420,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decorators",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":461,"title":{},"body":{"injectables/TaskSchedule.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":311,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":509,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":532,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":630,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":639,"title":{},"body":{"index.html":{}}}],["dir",{"_index":315,"title":{},"body":{"modules/MailModule.html":{}}}],["documentation",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":516,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["e.code",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":650,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":625,"title":{},"body":{"index.html":{}}}],["email",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"injectables/TaskSchedule.html":{}}}],["endpoint",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":608,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/role",{"_index":418,"title":{},"body":{"guards/RolesGuard.html":{}}}],["err",{"_index":398,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["err.getstatus",{"_index":399,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["err.message",{"_index":404,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["error",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["errorhandler",{"_index":405,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["errorhandler(err",{"_index":397,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["example",{"_index":636,"title":{},"body":{"index.html":{}}}],["example.com",{"_index":330,"title":{},"body":{"injectables/MailService.html":{}}}],["exception",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["executioncontext",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["expired",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expiresin",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":280,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":504,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["extends",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{}}}],["extracttokenfromheader",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["false",{"_index":402,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["file",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":557,"title":{},"body":{"injectables/UsersService.html":{}}}],["file.originalname",{"_index":556,"title":{},"body":{"injectables/UsersService.html":{}}}],["fileinterceptor",{"_index":519,"title":{},"body":{"controllers/UsersController.html":{}}}],["filename",{"_index":442,"title":{},"body":{"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":523,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["forbidden_message",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception(forbidden_message",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["forcepathstyle",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["founduser",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["founduser.email",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["founduser.id",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["founduser.password",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":623,"title":{},"body":{"index.html":{}}}],["function",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":613,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":619,"title":{"index.html":{}},"body":{}}],["global",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PrismaModule.html":{}}}],["grow",{"_index":657,"title":{},"body":{"index.html":{}}}],["guard",{"_index":112,"title":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlebars",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":297,"title":{},"body":{"modules/MailModule.html":{}}}],["handlecron",{"_index":456,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["hashedpassword",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":666,"title":{},"body":{"index.html":{}}}],["host",{"_index":304,"title":{},"body":{"modules/MailModule.html":{}}}],["httpexception",{"_index":369,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["https://nestjs.com",{"_index":673,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":370,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["httpstatus.internal_server_error",{"_index":400,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["id",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":380,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["implements",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/UsersModule.html":{}}}],["include",{"_index":552,"title":{},"body":{"injectables/UsersService.html":{}}}],["index",{"_index":84,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":321,"title":{},"body":{"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":136,"title":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PostService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PostService.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PostService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injects3",{"_index":443,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["installation",{"_index":635,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":638,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["intercept",{"_index":378,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["intercept(context",{"_index":408,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["interface",{"_index":364,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":365,"title":{},"body":{"interfaces/Response.html":{}}}],["is_public_key",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@isnotempty",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isglobal",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isoptional",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@isstring",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ispasswordvalid",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["ispublic",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["join",{"_index":296,"title":{},"body":{"modules/MailModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":316,"title":{},"body":{"modules/MailModule.html":{}}}],["jwtmodule",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":670,"title":{},"body":{"index.html":{}}}],["key",{"_index":452,"title":{},"body":{"injectables/StorageService.html":{}}}],["lastname",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lib/decorator/auth.decorator",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/decorator/role.decorator",{"_index":518,"title":{},"body":{"controllers/UsersController.html":{}}}],["lib/decorator/s3.decorator",{"_index":444,"title":{},"body":{"injectables/StorageService.html":{}}}],["lib/enums/role",{"_index":483,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["lib/gaurds/auth.gaurd",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":676,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":654,"title":{},"body":{"index.html":{}}}],["logger",{"_index":455,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["loggermiddleware",{"_index":55,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["login",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logindto",{"_index":194,"title":{"classes/LoginDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["made",{"_index":283,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["mail.service",{"_index":299,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskSchedule.html":{}}}],["mailermodule",{"_index":293,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":301,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":325,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":14,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":187,"title":{"injectables/MailService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/TaskSchedule.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":373,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["map((data",{"_index":382,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["matching",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(date.now",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["message",{"_index":403,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["metadata",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["methods",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares/logger.middleware",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":607,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":653,"title":{},"body":{"index.html":{}}}],["mode",{"_index":643,"title":{},"body":{"index.html":{}}}],["moderator",{"_index":612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":295,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":298,"title":{},"body":{"modules/MailModule.html":{}}}],["more",{"_index":665,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":671,"title":{},"body":{"index.html":{}}}],["name",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":631,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":675,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":371,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["nestjs",{"_index":294,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/MailModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/core/guards",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["nestjs/jwt",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":472,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":520,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/TaskSchedule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":279,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/MailModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"coverage.html":{}}}],["next",{"_index":275,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["next.handle().pipe",{"_index":381,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["nextfunction",{"_index":276,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":622,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["noreply@gmail.com",{"_index":313,"title":{},"body":{"modules/MailModule.html":{}}}],["notfoundexception",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception('user",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":374,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["onmoduleinit",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":655,"title":{},"body":{"index.html":{}}}],["optional",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":319,"title":{},"body":{"modules/MailModule.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":681,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":587,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":510,"title":{},"body":{"controllers/UsersController.html":{}}}],["param('id",{"_index":529,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":471,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":470,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":309,"title":{},"body":{"modules/MailModule.html":{}}}],["password",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["patch",{"_index":511,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":501,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id/upload",{"_index":505,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"injectables/UsersService.html":{}}}],["payload",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["payload.exp",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["picture",{"_index":527,"title":{},"body":{"controllers/UsersController.html":{}}}],["picture')@useinterceptors(undefined",{"_index":507,"title":{},"body":{"controllers/UsersController.html":{}}}],["please",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["post",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["post.service",{"_index":344,"title":{},"body":{"modules/PostModule.html":{}}}],["post/post.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["postmodule",{"_index":15,"title":{"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postservice",{"_index":342,"title":{"injectables/PostService.html":{}},"body":{"modules/PostModule.html":{},"injectables/PostService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma.service",{"_index":350,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":358,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prisma/client/runtime/library",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["prisma/prisma.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["prismaclient",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["prismamodule",{"_index":16,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":186,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":300,"title":{},"body":{"modules/MailModule.html":{},"injectables/UsersService.html":{}}}],["process.env.jwt_secret",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.minio_s3_url}/${bucketname}/${filename",{"_index":560,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":645,"title":{},"body":{"index.html":{}}}],["profile",{"_index":506,"title":{},"body":{"controllers/UsersController.html":{}}}],["progressive",{"_index":621,"title":{},"body":{"index.html":{}}}],["project",{"_index":656,"title":{},"body":{"index.html":{}}}],["promise",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["properties",{"_index":253,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"interfaces/Response.html":{},"injectables/TaskSchedule.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["provider/s3.provider",{"_index":432,"title":{},"body":{"modules/StorageModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["putobjectcommand",{"_index":445,"title":{},"body":{"injectables/StorageService.html":{}}}],["read",{"_index":664,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":454,"title":{},"body":{"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["region",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":533,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":496,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reply",{"_index":312,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":634,"title":{},"body":{"index.html":{}}}],["req",{"_index":278,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.hostname",{"_index":282,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.method",{"_index":284,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.originalurl",{"_index":285,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["request.headers['authorization']?.split",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.url",{"_index":395,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["request['user",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requestmethod",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["requiredroles",{"_index":421,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":423,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":273,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":274,"title":{"interfaces/Response.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["response.json",{"_index":393,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["response.status(status).json",{"_index":401,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["response.statuscode",{"_index":392,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["responsehandler",{"_index":406,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["responsehandler(data",{"_index":386,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["responseinterceptor",{"_index":377,"title":{"injectables/ResponseInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["rest",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":396,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["results",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":417,"title":{},"body":{"guards/RolesGuard.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.user",{"_index":531,"title":{},"body":{"controllers/UsersController.html":{}}}],["role.user)@delete(':id",{"_index":498,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles",{"_index":517,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":497,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles_key",{"_index":419,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":411,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["run",{"_index":640,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":376,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"dependencies.html":{}}}],["s3",{"_index":448,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["s3_token",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["s3client",{"_index":436,"title":{},"body":{"injectables/StorageService.html":{},"miscellaneous/functions.html":{}}}],["s3clientconfig",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["s3provider",{"_index":431,"title":{},"body":{"modules/StorageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":626,"title":{},"body":{"index.html":{}}}],["schedule/task.schedule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["sdk/client",{"_index":447,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["secret",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["secretaccesskey",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secure",{"_index":306,"title":{},"body":{"modules/MailModule.html":{}}}],["senduserconfirmation",{"_index":323,"title":{},"body":{"injectables/MailService.html":{}}}],["senduserconfirmation(user",{"_index":327,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":627,"title":{},"body":{"index.html":{}}}],["session",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["setmetadata(is_public_key",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setprofilepicture",{"_index":541,"title":{},"body":{"injectables/UsersService.html":{}}}],["setprofilepicture(file",{"_index":547,"title":{},"body":{"injectables/UsersService.html":{}}}],["side",{"_index":628,"title":{},"body":{"index.html":{}}}],["signin",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signindto",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signindto.email",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto.password",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createuserdto",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(usercreatedto",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["skipauth",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skipauth()@post('login",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["skipauth()@post('signup",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["source",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/PostModule.html":{},"injectables/PostService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":659,"title":{},"body":{"index.html":{}}}],["src/.../auth.decorator.ts",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.decorator.ts",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.ts",{"_index":609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../s3.constant.ts",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../s3.decorator.ts",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../s3.provider.ts",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../s3.util.ts",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:42",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:16",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:47",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:74",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":286,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:10",{"_index":288,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:6",{"_index":287,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/common/s3.constant.ts",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/s3.util.ts",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/decorator/auth.decorator.ts",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/decorator/role.decorator.ts",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/decorator/s3.decorator.ts",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/enums/role.ts",{"_index":610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/lib/gaurds/auth.gaurd.ts",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/lib/gaurds/auth.gaurd.ts:13",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/lib/gaurds/auth.gaurd.ts:19",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/lib/gaurds/auth.gaurd.ts:49",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/lib/gaurds/roles.guard.ts",{"_index":412,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/lib/gaurds/roles.guard.ts:7",{"_index":414,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/lib/gaurds/roles.guard.ts:9",{"_index":415,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/mail/mail.module.ts",{"_index":292,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":322,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:5",{"_index":326,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:8",{"_index":328,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/logger.middleware.ts",{"_index":270,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middlewares/logger.middleware.ts:5",{"_index":277,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/post/post.module.ts",{"_index":343,"title":{},"body":{"modules/PostModule.html":{}}}],["src/post/post.service.ts",{"_index":345,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":349,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:16",{"_index":357,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":356,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/provider/s3.provider.ts",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/response/response.interceptor.ts",{"_index":366,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/response/response.interceptor.ts:15",{"_index":409,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["src/response/response.interceptor.ts:28",{"_index":410,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["src/response/response.interceptor.ts:42",{"_index":407,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["src/schedule/task.schedule.ts",{"_index":453,"title":{},"body":{"injectables/TaskSchedule.html":{},"coverage.html":{}}}],["src/schedule/task.schedule.ts:11",{"_index":460,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["src/schedule/task.schedule.ts:6",{"_index":458,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["src/storage/storage.module.ts",{"_index":429,"title":{},"body":{"modules/StorageModule.html":{}}}],["src/storage/storage.service.ts",{"_index":433,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/storage/storage.service.ts:6",{"_index":437,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/storage/storage.service.ts:8",{"_index":441,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/users/dto/create",{"_index":269,"title":{},"body":{"classes/CreateUserDto-1.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":469,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":476,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":480,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":479,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":481,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":482,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":478,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:23",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:27",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":502,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:38",{"_index":508,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:46",{"_index":499,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":538,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":540,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:14",{"_index":544,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":545,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":549,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:41",{"_index":548,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:60",{"_index":546,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":543,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":641,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":644,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":646,"title":{},"body":{"index.html":{}}}],["started",{"_index":620,"title":{"index.html":{}},"body":{}}],["starter",{"_index":633,"title":{},"body":{"index.html":{}}}],["statements",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":394,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["statuscode",{"_index":391,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["stay",{"_index":667,"title":{},"body":{"index.html":{}}}],["storage.service",{"_index":430,"title":{},"body":{"modules/StorageModule.html":{}}}],["storage/storage.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["storage/storage.service",{"_index":550,"title":{},"body":{"injectables/UsersService.html":{}}}],["storagemodule",{"_index":17,"title":{"modules/StorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["storageservice",{"_index":428,"title":{"injectables/StorageService.html":{}},"body":{"modules/StorageModule.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["strict",{"_index":320,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/StorageService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":335,"title":{},"body":{"injectables/MailService.html":{}}}],["super",{"_index":359,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":660,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":679,"title":{},"body":{"modules.html":{}}}],["t",{"_index":367,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["table",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["taskschedule",{"_index":19,"title":{"injectables/TaskSchedule.html":{}},"body":{"modules/AppModule.html":{},"injectables/TaskSchedule.html":{},"coverage.html":{},"overview.html":{}}}],["template",{"_index":314,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":317,"title":{},"body":{"modules/MailModule.html":{}}}],["test",{"_index":649,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":652,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":651,"title":{},"body":{"index.html":{}}}],["tests",{"_index":648,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":658,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":363,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.signin(signindto",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(createuserdto",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.comparepassword",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.get('jwt_secret",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.errorhandler(err",{"_index":385,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["this.extracttokenfromheader(request",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.jwtservice.signasync(payload",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.mailerservice.sendmail",{"_index":334,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.senduserconfirmation",{"_index":466,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["this.mailservice.senduserconfirmation(createduser",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.create",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.findunique",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prismaservice.user.delete",{"_index":561,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.findmany",{"_index":551,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.findunique",{"_index":553,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.update",{"_index":554,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":422,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.responsehandler(data",{"_index":383,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["this.s3client.send",{"_index":450,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storageservice.upload(filename",{"_index":559,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findall",{"_index":522,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":524,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":534,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.setprofilepicture(file",{"_index":530,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":526,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["throwerror",{"_index":375,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["todo",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["touch",{"_index":668,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":303,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["ts",{"_index":379,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{}}}],["twitter",{"_index":674,"title":{},"body":{"index.html":{}}}],["type",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/StorageService.html":{},"injectables/TaskSchedule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":473,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":632,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["undefined",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":647,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResponseInterceptor.html":{},"injectables/StorageService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":688,"title":{},"body":{"properties.html":{}}}],["update",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":525,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":500,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":468,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["upload",{"_index":434,"title":{},"body":{"injectables/StorageService.html":{}}}],["upload(filename",{"_index":438,"title":{},"body":{"injectables/StorageService.html":{}}}],["uploadedfile",{"_index":512,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadprofilepicture",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadprofilepicture(file",{"_index":503,"title":{},"body":{"controllers/UsersController.html":{}}}],["url",{"_index":329,"title":{},"body":{"injectables/MailService.html":{},"injectables/PrismaService.html":{}}}],["use",{"_index":271,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":272,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":302,"title":{},"body":{"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["useinterceptors",{"_index":513,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":528,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":307,"title":{"classes/User.html":{}},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.dto",{"_index":475,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:19",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":333,"title":{},"body":{"injectables/MailService.html":{}}}],["user.roles?.includes(role",{"_index":424,"title":{},"body":{"guards/RolesGuard.html":{}}}],["usercreatedto",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":539,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":515,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":484,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":18,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":514,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["v4",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":462,"title":{},"body":{"injectables/TaskSchedule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":689,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":686,"title":{},"body":{"properties.html":{}}}],["void",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"injectables/ResponseInterceptor.html":{}}}],["voniarimalalafiaro@gmail.com",{"_index":467,"title":{},"body":{"injectables/TaskSchedule.html":{}}}],["watch",{"_index":642,"title":{},"body":{"index.html":{}}}],["website",{"_index":672,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":336,"title":{},"body":{"injectables/MailService.html":{}}}],["yarn",{"_index":637,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":663,"title":{},"body":{"index.html":{}}}],["zarablog",{"_index":677,"title":{},"body":{"index.html":{}}}],["zarablogbucket",{"_index":558,"title":{},"body":{"injectables/UsersService.html":{}}}],["zoom",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostModule.html":{},"modules/PrismaModule.html":{},"modules/StorageModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nStorageModule\n\nStorageModule\n\nAppModule -->\n\nStorageModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nTaskSchedule\n\nTaskSchedule\n\nAppModule -->\n\nTaskSchedule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskSchedule\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PostModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            StorageModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { PostModule } from './post/post.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { MailModule } from './mail/mail.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthGuard } from './lib/gaurds/auth.gaurd';\nimport { LoggerMiddleware } from './middlewares/logger.middleware';\nimport { UsersModule } from './users/users.module';\nimport { StorageModule } from './storage/storage.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { TaskSchedule } from './schedule/task.schedule';\n\n@Module({\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    TaskSchedule,\n  ],\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    ScheduleModule.forRoot(),\n    AuthModule,\n    PostModule,\n    PrismaModule,\n    MailModule,\n    UsersModule,\n    StorageModule,\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                signIn\n                            \n                            \n                                    \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipAuth()@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipAuth()@Post('signup')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateUserDto } from './dto';\nimport { SkipAuth } from '../lib/decorator/auth.decorator';\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  @SkipAuth()\n  @Post('signup')\n  signup(@Body() createUserDto: CreateUserDto) {\n    return this.authService.signup(createUserDto);\n  }\n  @SkipAuth()\n  @Post('login')\n  signIn(@Body() signInDto: CreateUserDto) {\n    return this.authService.signIn(signInDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/gaurds/auth.gaurd.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, config: ConfigService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/lib/gaurds/auth.gaurd.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/gaurds/auth.gaurd.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/gaurds/auth.gaurd.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from '../decorator/auth.decorator';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private config: ConfigService,\n    private reflector: Reflector,\n  ) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass,\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const secret = this.config.get('JWT_SECRET');\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: secret,\n      });\n      const currentTime = Math.floor(Date.now() / 1000);\n      if (currentTime > payload.exp) {\n        throw new UnauthorizedException(\n          'Your session is expired, please login again',\n        );\n      }\n      request['user'] = payload;\n      return true;\n    } catch (e) {\n      throw new UnauthorizedException();\n    }\n  }\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, Token] = request.headers['authorization']?.split(' ') ?? [];\n    return type === 'Bearer' ? Token : 'undefined';\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  controllers: [AuthController],\n  imports: [\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '2h' },\n    }),\n  ],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                comparePassword\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        comparePassword\n                        \n                    \n                \n            \n            \n                \ncomparePassword(password: string, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(userCreateDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userCreateDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateUserDto, LoginDto } from './dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport * as argon2 from 'argon2';\nimport { v4 as uuidv4 } from 'uuid';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime/library';\nimport { JwtService } from '@nestjs/jwt';\nimport { MailService } from '../mail/mail.service';\nimport { FORBIDDEN_MESSAGE } from '@nestjs/core/guards';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwtService: JwtService,\n    private mailService: MailService,\n  ) {}\n  async signup(userCreateDto: CreateUserDto) {\n    const { password, email, ...rest } = userCreateDto;\n    console.log(password, email);\n    try {\n      const hashedPassword = await argon2.hash(password);\n      const createdUser = await this.prisma.user.create({\n        data: {\n          id: uuidv4(),\n          email: email,\n          password: hashedPassword,\n          ...rest,\n        },\n      });\n      await this.mailService.sendUserConfirmation(createdUser);\n      console.log(createdUser);\n      return createdUser;\n    } catch (e) {\n      if (e instanceof PrismaClientKnownRequestError) {\n        if (e.code == 'P2002') {\n          throw new ForbiddenException('Credentials already taken');\n        }\n      }\n      console.log(e);\n    }\n  }\n  async signIn(signInDto: LoginDto) {\n    try {\n      const foundUser = await this.prisma.user.findUnique({\n        where: {\n          email: signInDto.email,\n        },\n      });\n\n      if (!foundUser) {\n        return new NotFoundException('User Not found');\n      }\n      const isPasswordValid = await this.comparePassword(\n        signInDto.password,\n        foundUser.password,\n      );\n      if (!isPasswordValid) {\n        return new ForbiddenException(FORBIDDEN_MESSAGE);\n      }\n      const payload = { sub: foundUser.id, email: foundUser.email };\n      return {\n        access_token: await this.jwtService.signAsync(payload),\n      };\n    } catch (e) {\n      //Todo: Handle error exception\n      console.log(e.message);\n    }\n  }\n  comparePassword(password: string, hashedPassword: string): Promise {\n    return argon2.verify(hashedPassword, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @IsOptional()\n  @IsString()\n  firstname: string;\n\n  @IsOptional()\n  @IsString()\n  lastname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto-1.html":{"url":"classes/CreateUserDto-1.html","title":"class - CreateUserDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/middlewares/logger.middleware.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Response, Request } from 'express';\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log(\n      `${req.hostname} made a request with method: ${req.method}  to ${req.originalUrl}`,\n    );\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MailService } from './mail.service';\nimport * as process from 'process';\nimport { ConfigService } from '@nestjs/config';\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (config: ConfigService) => ({\n        transport: {\n          host: config.get('MAILER_HOST'),\n          secure: true,\n          auth: {\n            user: config.get('MAILER_USER'),\n            pass: config.get('MAILER_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: 'No reply noreply@gmail.com',\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendUserConfirmation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendUserConfirmation\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendUserConfirmation(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\n\n@Injectable()\nexport class MailService {\n  constructor(private mailerService: MailerService) {}\n\n  async sendUserConfirmation(user: any) {\n    const url = 'example.com';\n    console.log('sending email address', user.email);\n\n    await this.mailerService.sendMail({\n      to: user.email,\n      subject: 'Welcome to blog app',\n      template: './confirmation',\n      context: {\n        name: user.email,\n        url,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\n\nPostService\n\nPostService\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostService } from './post.service';\n\n@Module({\n  providers: [PostService],\n})\nexport class PostModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PostService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/response/response.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { catchError, map, Observable, throwError } from 'rxjs';\ninterface Response {\n  data: T;\n}\n@Injectable()\nexport class ResponseInterceptor implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    // @ts-ignore\n    return next.handle().pipe(\n      map((data) => this.responseHandler(data, context)),\n      catchError((err: HttpException) =>\n        throwError(() => this.errorHandler(err, context)),\n      ),\n    );\n  }\n\n  private responseHandler(data: unknown, context: ExecutionContext) {\n    const ctx = context.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const statusCode = response.statusCode;\n    response.json({\n      status: true,\n      path: request.url,\n      statusCode,\n      result: data,\n    });\n  }\n\n  private errorHandler(err: HttpException, context: ExecutionContext) {\n    const ctx = context.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const status =\n      err instanceof HttpException\n        ? err.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(status).json({\n      status: false,\n      statusCode: status,\n      path: request.url,\n      message: err.message,\n      result: err,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseInterceptor.html":{"url":"injectables/ResponseInterceptor.html","title":"injectable - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/response/response.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                responseHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorHandler\n                        \n                    \n                \n            \n            \n                \n                        \n                    errorHandler(err: HttpException, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/response/response.interceptor.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/response/response.interceptor.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        responseHandler\n                        \n                    \n                \n            \n            \n                \n                        \n                    responseHandler(data, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/response/response.interceptor.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { catchError, map, Observable, throwError } from 'rxjs';\ninterface Response {\n  data: T;\n}\n@Injectable()\nexport class ResponseInterceptor implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    // @ts-ignore\n    return next.handle().pipe(\n      map((data) => this.responseHandler(data, context)),\n      catchError((err: HttpException) =>\n        throwError(() => this.errorHandler(err, context)),\n      ),\n    );\n  }\n\n  private responseHandler(data: unknown, context: ExecutionContext) {\n    const ctx = context.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const statusCode = response.statusCode;\n    response.json({\n      status: true,\n      path: request.url,\n      statusCode,\n      result: data,\n    });\n  }\n\n  private errorHandler(err: HttpException, context: ExecutionContext) {\n    const ctx = context.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const status =\n      err instanceof HttpException\n        ? err.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(status).json({\n      status: false,\n      statusCode: status,\n      path: request.url,\n      message: err.message,\n      result: err,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/lib/gaurds/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/lib/gaurds/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/gaurds/roles.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role } from '../enums/role';\nimport { ROLES_KEY } from '../decorator/role.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StorageModule.html":{"url":"modules/StorageModule.html","title":"module - StorageModule","body":"\n                   \n\n\n\n\n    Modules\n    StorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\n\nStorageService \n\nStorageService \n\n\n\nStorageModule\n\nStorageModule\n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/storage/storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StorageService } from './storage.service';\nimport { s3Provider } from '../provider/s3.provider';\n\n@Module({\n  providers: [StorageService, s3Provider],\n  exports: [StorageService],\n})\nexport class StorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/storage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(s3Client: S3Client)\n                    \n                \n                        \n                            \n                                Defined in src/storage/storage.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s3Client\n                                                  \n                                                        \n                                                                    S3Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(filename: string, buffer: any, bucketname: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/storage/storage.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                buffer\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bucketname\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectS3 } from '../lib/decorator/s3.decorator';\nimport { PutObjectCommand, S3Client } from '@aws-sdk/client-s3';\n\n@Injectable()\nexport class StorageService {\n  constructor(@InjectS3() private s3Client: S3Client) {}\n  async upload(filename: string, buffer: any, bucketname: string) {\n    return this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: bucketname,\n        Key: filename,\n        Body: buffer,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskSchedule.html":{"url":"injectables/TaskSchedule.html","title":"injectable - TaskSchedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskSchedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schedule/task.schedule.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/schedule/task.schedule.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_10_SECONDS)\n                \n            \n\n                    \n                        \n                            Defined in src/schedule/task.schedule.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger()\n                    \n                \n                    \n                        \n                                Defined in src/schedule/task.schedule.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { MailService } from '../mail/mail.service';\n@Injectable()\nexport class TaskSchedule {\n  private readonly logger = new Logger();\n\n  constructor(private mailService: MailService) {}\n\n  @Cron(CronExpression.EVERY_10_SECONDS)\n  handleCron() {\n    console.log('send email');\n    return this.mailService.sendUserConfirmation({\n      email: 'voniarimalalafiaro@gmail.com',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [string]\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '../../lib/enums/role';\n\nexport class User {\n  id: string;\n  firstname?: string;\n  lastname?: string;\n  role: Role;\n  avatar?: [string];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                uploadProfilePicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.ADMIN, Role.USER)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uploadProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProfilePicture(file: Express.Multer.File, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/upload-profile-picture')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Roles } from '../lib/decorator/role.decorator';\nimport { Role } from '../lib/enums/role';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Patch(':id/upload-profile-picture')\n  @UseInterceptors(FileInterceptor('file'))\n  uploadProfilePicture(\n    @UploadedFile() file: Express.Multer.File,\n    @Param('id') id: string,\n  ) {\n    return this.usersService.setProfilePicture(file, id);\n  }\n  @Roles(Role.ADMIN, Role.USER)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { StorageModule } from '../storage/storage.module';\n\n@Module({\n  imports: [StorageModule],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                setProfilePicture\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProfilePicture\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProfilePicture(file: Express.Multer.File, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Express } from 'express';\nimport { StorageService } from '../storage/storage.service';\nimport * as process from 'process';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private prismaService: PrismaService,\n    private readonly storageService: StorageService,\n  ) {}\n  findAll() {\n    return this.prismaService.user.findMany({\n      include: {\n        avatar: true,\n      },\n    });\n  }\n\n  findOne(id: string) {\n    return this.prismaService.user.findUnique({\n      where: {\n        id: id,\n      },\n      include: {\n        avatar: true,\n      },\n    });\n  }\n\n  update(id: string, updateUserDto: UpdateUserDto) {\n    return this.prismaService.user.update({\n      where: {\n        id: id,\n      },\n      data: updateUserDto,\n    });\n  }\n  async setProfilePicture(file: Express.Multer.File, id: string) {\n    const filename = Date.now() + file.originalname;\n    const buffer = file.buffer;\n    const bucketname = 'zarablogbucket';\n    await this.storageService.upload(filename, buffer, bucketname);\n    return this.prismaService.user.update({\n      where: {\n        id: id,\n      },\n      data: {\n        avatar: {\n          create: {\n            filename: filename,\n            path: `${process.env.MINIO_S3_URL}/${bucketname}/${filename}`,\n          },\n        },\n      },\n    });\n  }\n  remove(id: string) {\n    return this.prismaService.user.delete({\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/s3.constant.ts\n            \n            variable\n            S3_Token\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/s3.util.ts\n            \n            function\n            createS3Client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/decorator/auth.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/decorator/auth.decorator.ts\n            \n            variable\n            SkipAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/decorator/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/decorator/s3.decorator.ts\n            \n            function\n            InjectS3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/gaurds/auth.gaurd.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/gaurds/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/post/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/provider/s3.provider.ts\n            \n            variable\n            s3Provider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/response/response.interceptor.ts\n            \n            injectable\n            ResponseInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/response/response.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/schedule/task.schedule.ts\n            \n            injectable\n            TaskSchedule\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : ^3.451.0\n        \n            @nestjs-modules/mailer : ^1.9.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/schedule : ^4.0.0\n        \n            argon2 : ^0.31.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            handlebars : ^4.7.8\n        \n            nodemailer : ^6.9.7\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            uuid : ^9.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/enums/role.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 MODERATOR\n                            \n                        \n                        \n                            \n                                Value : MODERATOR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createS3Client   (src/.../s3.util.ts)\n                        \n                        \n                            InjectS3   (src/.../s3.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/s3.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createS3Client\n                        \n                    \n                \n            \n            \n                \ncreateS3Client(options: S3ClientConfig)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        S3ClientConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     S3Client\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/decorator/s3.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InjectS3\n                        \n                    \n                \n            \n            \n                \nInjectS3()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\nZaraBlog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_StorageModule\n\n\n\ncluster_StorageModule_exports\n\n\n\ncluster_StorageModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nStorageModule\n\nStorageModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nStorageModule->UsersModule\n\n\n\nAppModule -->\n\nStorageModule->AppModule\n\n\n\n\n\nStorageService \n\nStorageService \n\nStorageService  -->\n\nStorageModule->StorageService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nTaskSchedule\n\nTaskSchedule\n\nAppModule -->\n\nTaskSchedule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostModule -->\n\nPostService->PostModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nStorageModule -->\n\nStorageService->StorageModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../auth.decorator.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                        \n                            S3_Token   (src/.../s3.constant.ts)\n                        \n                        \n                            s3Provider   (src/.../s3.provider.ts)\n                        \n                        \n                            SkipAuth   (src/.../auth.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/lib/decorator/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/common/s3.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        S3_Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'S3'\n                    \n                \n\n\n        \n    \n\n    src/provider/s3.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        s3Provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: S3_Token,\n  useFactory: (config: ConfigService) => {\n    return createS3Client({\n      region: config.get('AWS_S3_REGION'),\n      endpoint: config.get('MINIO_S3_URL'),\n      forcePathStyle: true,\n      credentials: {\n        accessKeyId: config.get('AWS_S3_ACCESS_KEY'),\n        secretAccessKey: config.get('AWS_S3_SECRET_KEY'),\n      },\n    });\n  },\n  inject: [ConfigService],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
